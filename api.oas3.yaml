openapi: 3.0.0
info:
  title: Shotstack
  version: v1
  description: >-
    The Shotstack API is a video editing service that allows for the automated
    creation of videos using JSON. You can configure an edit and POST it to the
    Shotstack API which will render your video and provide a file location
    when complete. For more details check https://shotstack.io
servers:
  - url: 'https://api.shotstack.io/{version}'
    variables:
      version:
        enum:
          - v1
          - stage
        default: v1
paths:
  /render:
    post:
      responses:
        '201':
          description: ''
          content:
            application/json:
              example:
                success: true
                message: Created
                response:
                  message: Render Successfully Queued
                  id: 2abd5c11-0f3d-4c6d-ba20-235fc9b8e8b7
              schema:
                $ref: '#/components/schemas/QueuedResponse'
      description: Render the contents of a timeline as a video file.
      operationId: postRender
      requestBody:
        content:
          application/json:
            example:
              timeline:
                soundtrack:
                  src: 'https://s3-ap-northeast-1.amazonaws.com/my-bucket/music.mp3'
                  effect: fadeInFadeOut
                background: '#000000'
                tracks:
                  - clips:
                      - asset:
                          type: title
                          text: Hello World
                          style: minimal
                        start: 0
                        length: 4
                        transition:
                          in: fade
                          out: fade
                        effect: slideRight
                      - asset:
                          type: image
                          src: >-
                            https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-image.jpg
                        start: 3
                        length: 4
                        effect: zoomIn
                        filter: greyscale
                  - clips:
                      - asset:
                          type: video
                          src: >-
                            https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-clip-1.mp4
                          trim: 10.5
                        start: 7
                        length: 4.5
                      - asset:
                          type: video
                          src: >-
                            https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-clip-2.mp4
                          volume: 0.5
                        start: 11.5
                        length: 5
                        transition:
                          out: wipeLeft
              output:
                format: mp4
                resolution: sd
            schema:
              $ref: '#/components/schemas/Edit'
        required: true
      security:
        - DeveloperKey: []
      tags:
        - Endpoints
  '/render/{id}':
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              example:
                success: true
                message: OK
                response:
                  status: rendering
                  id: 2abd5c11-0f3d-4c6d-ba20-235fc9b8e8b7
                  owner: 5ca6hu7s9k
                  url: >-
                    https://shotstack-api-v1-output.s3-ap-southeast-2.amazonaws.com/5ca6hu7s9k/2abd5c11-0f3d-4c6d-ba20-235fc9b8e8b7.mp4
                  data:
                    timeline:
                      soundtrack:
                        src: >-
                          https://s3-ap-northeast-1.amazonaws.com/my-bucket/music.mp3
                        effect: fadeInFadeOut
                      background: '#000000'
                      tracks:
                        - clips:
                            - asset:
                                type: title
                                text: Hello World
                                style: minimal
                              start: 0
                              length: 4
                              transition:
                                in: fade
                                out: fade
                              effect: slideRight
                            - asset:
                                type: image
                                src: >-
                                  https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-image.jpg
                              start: 3
                              length: 4
                              effect: zoomIn
                              filter: greyscale
                        - clips:
                            - asset:
                                type: video
                                src: >-
                                  https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-clip-1.mp4
                                trim: 10.5
                              start: 7
                              length: 4.5
                            - asset:
                                type: video
                                src: >-
                                  https://s3-ap-northeast-1.amazonaws.com/my-bucket/my-clip-2.mp4
                                volume: 0.5
                              start: 11.5
                              length: 5
                              transition:
                                out: wipeLeft
                    output:
                      format: mp4
                      resolution: sd
                  created: '2018-05-06T03:33:25.425Z'
                  updated: '2018-05-06T03:33:48.521Z'
              schema:
                $ref: '#/components/schemas/RenderResponse'
      description: 'Get the rendering status, video url and details of a timeline by ID.'
      operationId: getRender
      security:
        - DeveloperKey: []
      tags:
        - Endpoints
    parameters:
      - name: id
        in: path
        required: true
        schema:
          pattern: >-
            ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
          type: string
        description: The id of the timeline render task in UUID format
components:
  schemas:
    Edit:
      description: >-
        An edit defines the content of the video in a timeline and the output
        format.
      properties:
        timeline:
          $ref: '#/components/schemas/Timeline'
        output:
          $ref: '#/components/schemas/Output'
        callback:
          type: string
          description: >-
            An optional webhook callback URL used to receive status notifications
            when a render completes or fails.
      required:
        - timeline
        - output
      type: object
    Timeline:
      description: >-
        A timeline represents the contents of a video edit over time, in
        seconds. A timeline consists of layers called tracks. Tracks are
        composed of titles, images or video segments referred to as clips which
        are placed along the track at specific starting point and lasting for a
        specific amount of time.
      properties:
        soundtrack:
          description: A music or audio soundtrack file in mp3 format.
          $ref: '#/components/schemas/Soundtrack'
        background:
          description: >-
            A hexadecimal value for the timeline background colour. Defaults to
            #000000 (black).
          type: string
          default: '#000000'
        fonts:
          description: An array of custom fonts to be downloaded for use by the HTML assets.
          type: array
          items:
            $ref: '#/components/schemas/Font'
        tracks:
          description: >-
            A timeline consists of an array of tracks, each track containing
            clips. Tracks are layered on top of each other in the same order
            they are added to the array with the top most track layered over the
            top of those below it. Ensure that a track containing titles is the
            top most track so that it is displayed above videos and images.
          type: array
          items:
            $ref: '#/components/schemas/Track'
      required:
        - tracks
      type: object
    Soundtrack:
      description: >-
        A music or audio file in mp3 format that plays for the duration of the
        rendered video or the length of the audio file, which ever is shortest.
      properties:
        src:
          description: >-
            The URL of the mp3 audio file. The URL must be publicly accessible
            or include credentials.
          type: string
        effect:
          description: The effect to apply to the audio file
          enum:
            - fadeIn
            - fadeOut
            - fadeInFadeOut
          type: string
        volume:
          description: >-
            Set the volume for the soundtrack between 0 and 1 where 0 is muted and 1
            is full volume (defaults to 1).
          type: number
      required:
        - src
      type: object
    Track:
      description: >-
        A track contains an array of clips. Tracks are layered on top of each
        other in the order in the array. The top most track will render on top
        of those below it.
      properties:
        clips:
          description: 'An array of Clips comprising of TitleClip, ImageClip or VideoClip.'
          type: array
          items:
            $ref: '#/components/schemas/Clip'
      required:
        - clips
      type: object
    Clip:
      description: >-
        A clip is a container for a specific type of asset, i.e. a title, image, video,
        audio or html. You use a Clip to define when an asset will display on the
        timeline, how long it will play for and transitions, filters and effects to apply
        to it.
      properties:
        asset:
          description: >-
            The type of asset to display for the duration of this Clip. Value
            must be one of <b>TitleAsset</b>, <b>ImageAsset</b>, <b>VideoAsset</b>,
            <b>HtmlAsset</b>, <b>AudioAsset</b> or <b>LumaAsset</b>
          oneOf:
            - $ref: '#/components/schemas/TitleAsset'
            - $ref: '#/components/schemas/ImageAsset'
            - $ref: '#/components/schemas/VideoAsset'
            - $ref: '#/components/schemas/HtmlAsset'
            - $ref: '#/components/schemas/AudioAsset'
            - $ref: '#/components/schemas/LumaAsset'
        start:
          description: The start position of the Clip on the timeline, in seconds.
          type: number
        length:
          description: The length, in seconds, the Clip should play for.
          type: number
        fit:
          default: crop
          description: >-
            Set how the asset should be scaled to fit the viewport using one of the following options: 
              <ul>
                <li>`cover` - stretch the asset to fill the viewport without maintaining the aspect ratio.</li>
                <li>`contain` - fit the entire asset within the viewport while maintaining the original aspect ratio.</li>
                <li>`crop` - scale the asset to fill the viewport while maintaining the aspect ratio. The asset will be cropped if it exceeds the bounds of the viewport.</li>
                <li>`none` - preserves the original asset dimensions and does not apply any scaling.</li>
              </ul>
          enum:
            - cover
            - contain
            - crop
            - none
          type: string
        scale:
          description: >-
            Scale the asset to a fraction of the viewport size - i.e. setting the scale to 0.5 will scale
            asset to half the size of the viewport. This is useful for picture-in-picture video and 
            scaling images such as logos and watermarks.
          type: number
        position:
          default: center
          description: >- 
            Place the asset in one of nine predefined positions of the viewport. This is most effective
            for when the asset is scaled and you want to position the element to a specific position.
          enum:
            - top
            - topRight
            - right
            - bottomRight
            - bottom
            - bottomLeft
            - left
            - topLeft
            - center
          type: string
        offset:
          description: >-
            Offset the location of the asset relative to it's position on the
            viewport. The offset distance is relative to the width of the viewport -
            for example an x offset of 0.5 will move the asset half the viewport width
            to the right.
          $ref: '#/components/schemas/Offset'
        transition:
          $ref: '#/components/schemas/Transition'
        effect:
          description: A motion effect to apply to the Clip.
          enum:
            - zoomIn
            - zoomOut
            - slideLeft
            - slideRight
            - slideUp
            - slideDown
          type: string
        filter:
          description: A filter effect to apply to the Clip.
          enum:
            - boost
            - contrast
            - darken
            - greyscale
            - lighten
            - muted
            - negative
          type: string
        opacity:
          description: Sets the opacity of the Clip where 1 is opaque and 0 is transparent.
          type: number
      required:
        - asset
        - start
        - length
      type: object
    TitleAsset:
      description: >-
        The TitleAsset clip type lets you create video titles from a text string
        and apply styling and positioning.
      type: object
      properties:
        type:
          default: title
          description: The type of asset - set to <b>title</b> for titles.
          type: string
        text:
          description: The title text string - i.e. "My Title".
          type: string
        style:
          description: Uses a preset to apply font properties and styling to the title.
          enum:
            - minimal
            - blockbuster
            - vogue
            - sketchy
            - skinny
            - chunk
            - chunkLight
            - marker
            - future
            - subtitle
          type: string
        color:
          default: '#ffffff'
          description: >-
            Set the text color using hexadecimal color notation. Transparency is supported by setting the
            first two characters of the hex string (opposite to HTML),  i.e. #80ffffff will be white with 
            50% transparency.
          type: string
        size:
          default: medium
          description: >-
            Set the relative size of the text using predefined sizes from
            xx-small to xx-large.
          enum:
            - xx-small
            - x-small
            - small
            - medium
            - large
            - x-large
            - xx-large
          type: string
        background:
          description: >-
            Apply a background color behind the text. Set the text color using hexadecimal color notation.
            Transparency is supported by setting the first two characters of the hex string (opposite to HTML), 
            i.e. #80ffffff will be white with 50% transparency.
          type: string
        position:
          default: center
          description: Place the title in one of nine predefined positions of the viewport.
          enum:
            - top
            - topRight
            - right
            - bottomRight
            - bottom
            - bottomLeft
            - left
            - topLeft
            - center
          type: string
        offset:
          description: >-
            Offset the location of the title relative to it's position on the
            screen.
          $ref: '#/components/schemas/Offset'
      required:
        - type
        - text
    ImageAsset:
      description: >-
        The ImageAsset is used to create video from images. The src must be a
        publicly accessible URL to an image resource such as a jpg or png file.
      type: object
      properties:
        type:
          default: image
          description: The type of asset - set to <b>image</b> for images.
          type: string
        src:
          description: >-
            The image source URL. The URL must be publicly accessible or include
            credentials.
          type: string
      required:
        - type
        - src
    VideoAsset:
      description: >-
        The VideoAsset is used to create video sequences from video files. The
        src must be a publicly accessible URL to a video resource such as an mp4
        file.
      type: object
      properties:
        type:
          default: video
          description: The type of asset - set to <b>video</b> for videos.
          type: string
        src:
          description: >-
            The video source URL. The URL must be publicly accessible or include
            credentials.
          type: string
        trim:
          description: >-
            The start trim point of the video clip, in seconds (defaults to 0). Videos
            will start from the in trim point. The video will play until the
            file ends or the Clip length is reached.
          type: number
        volume:
          description: >-
            Set the volume for the video clip between 0 and 1 where 0 is muted and 1
            is full volume (defaults to 0).
          type: number
      required:
        - type
        - src
    HtmlAsset:
      description: >-
        The HtmlAsset clip type lets you create text based layout and formatting using
        HTML and CSS. You can also set the height and width of a bounding box for the HTML
        content to sit within. Text and elements will wrap within the bounding box.
      type: object
      properties:
        type:
          default: html
          description: The type of asset - set to <b>html</b> for HTML.
          type: string
        html:
          description: The HTML text string.
          type: string
          example: "<p>Hello <b>World</b></p>"
        css:
          description: >-
            The CSS text string to apply styling to the HTML.
          type: string
          example: "p { color: #ffffff; } b { color: #ffff00; }"
        width:
          description: >-
            Set the width of the HTML asset bounding box. Text will wrap to fill the bounding box.
          type: number
          example: 400
        height:
          description: >-
            Set the width of the HTML asset bounding box. Text and elements will be masked if they exceed the 
            height of the bounding box.
          type: number
          example: 300
        background:
          description: >-
            Apply a background color behind the HTML bounding box using. Set the text color using hexadecimal 
            color notation. Transparency is supported by setting the first two characters of the hex string 
            (opposite to HTML), i.e. #80ffffff will be white with 50% transparency.
          type: string
          default: transparent
        position:
          default: center
          description: Place the HTML in one of nine predefined positions within the HTML area.
          enum:
            - top
            - topRight
            - right
            - bottomRight
            - bottom
            - bottomLeft
            - left
            - topLeft
            - center
          type: string
      required:
        - type
        - html
    AudioAsset:
      description: >-
        The AudioAsset is used to add sound effects and audio at specific intervals on
        the timeline. The src must be a publicly accessible URL to an audio resource such 
        as an mp3 file.
      type: object
      properties:
        type:
          default: audio
          description: The type of asset - set to <b>audio</b> for audio assets.
          type: string
        src:
          description: >-
            The audio source URL. The URL must be publicly accessible or include
            credentials.
          type: string
        trim:
          description: >-
            The start trim point of the audio clip, in seconds (defaults to 0). Audio
            will start from the in trim point. The audio will play until the
            file ends or the Clip length is reached.
          type: number
        volume:
          description: >-
            Set the volume for the audio clip between 0 and 1 where 0 is muted and 1
            is full volume (defaults to 1).
          type: number
      required:
        - type
        - src
    LumaAsset:
      description: >-
        The LumaAsset is used to create luma matte transitions between other assets. A luma matte is 
        a grey scale animated video where the black areas are transparent and the white areas solid.
        The luma matte animation should be provided as an mp4 video file. The src must be a publicly 
        accessible URL to the file.
      type: object
      properties:
        type:
          default: luma
          description: The type of asset - set to <b>luma</b> for luma mattes.
          type: string
        src:
          description: >-
            The luma matte video source URL. The URL must be publicly accessible or include
            credentials.
          type: string
        trim:
          description: >-
            The start trim point of the luma video clip, in seconds (defaults to 0). Videos
            will start from the in trim point. The luma matte video will play until the
            file ends or the Clip length is reached.
          type: number
      required:
        - type
        - src
    Transition:
      description: In and out transitions for a clip - i.e. fade in and fade out
      properties:
        in:
          description: The transition in
          enum:
            - fade
            - reveal
            - wipeLeft
            - wipeRight
          type: string
        out:
          description: The transition out
          enum:
            - fade
            - reveal
            - wipeLeft
            - wipeRight
          type: string
      type: object
    Font:
      description: >-
        Download a custom font to use with the HTML asset type, using the font name in the CSS or font tag.
      properties:
        src:
          description: The URL of the font file. The URL must be publicly accessible or include credentials.
          type: string
      required:
        - src
      type: object
    Offset:
      description: >-
        Offsets the position of an asset horizontally or vertically by a
        relative distance.
      properties:
        x:
          description: >-
            Offset an asset on the horizontal axis (left or right), range varies
            from -1 to 1. Positive numbers move the asset right, negative left.
            For all assets except titles the distance moved is relative to the width 
            of the viewport - i.e. an X offset of 0.5 will move the asset half the 
            screen width to the right.
          type: number
          format: float
          minimum: -1
          maximum: 1
        y:
          description: >-
            Offset an asset on the vertical axis (up or down), range varies from
            -1 to 1. Positive numbers move the asset up, negative down.
            For all assets except titles the distance moved is relative to the height 
            of the viewport - i.e. an Y offset of 0.5 will move the asset up half the 
            screen height.
          type: number
          format: float
          minimum: -1
          maximum: 1
      type: object
    Output:
      description: The video output format.
      properties:
        format:
          description: >- 
            `mp4`, `webm` video or animated `gif`
          enum:
            - mp4
            - webm
            - gif
          type: string
        resolution:
          description: >-
            The output resolution of the video.
            <ul>
              <li>`preview` - 512px x 288px @ 15fps</li>
              <li>`mobile` - 640px x 360px @ 25fps</li>
              <li>`sd` - 1024px x 576px @25fps</li>
              <li>`hd` - 1280px x 720px @25fps</li>
              <li>`1080` - 1920px x 1080px @25fps</li>
            </ul>
          enum:
            - preview
            - mobile
            - sd
            - hd
            - '1080'
          type: string
        aspectRatio:
          description: >-
            The aspect ratio (shape) of the video. Useful for social media sites. Options are:
            <ul>
              <li>`16:9` - regular landscape/horizontal aspect ratio (default)</li>
              <li>`9:16` - vertical/portrait aspect ratio.</li>
              <li>`1:1` - square aspect ratio.</li>
            </ul>
          enum:
            - '16:9'
            - '9:16'
            - '1:1'
          type: string
        poster:
          description: >-
            Generate a poster image from a specific point on the timeline.
          $ref: '#/components/schemas/Poster'
        thumbnail:
          description: >-
            Generate a thumbnail image from a specific point on the timeline.
          $ref: '#/components/schemas/Thumbnail'
      required:
        - format
        - resolution
      type: object
    Poster:
      description: >-
        Generate a poster image for the video at a specific point from the timeline. The poster image size
        will match the size of the output video.
      properties:
        capture:
          description: The point on the timeline in seconds to capture a single frame to use as the poster image.
          type: number
      required:
        - capture
      type: object
    Thumbnail:
      description: Generate a thumbnail image for the video at a specific point from the timeline.
      properties:
        capture:
          description: The point on the timeline in seconds to capture a single frame to use as the thumbnail image.
          type: number
        scale:
          description: >-
            Scale the thumbnail size to a fraction of the viewport size - i.e. setting the scale to 0.5 will scale 
            the thumbnail to half the size of the viewport.
          type: number
      required:
        - capture
        - scale
      type: object
    QueuedResponse:
      properties:
        success:
          type: boolean
        message:
          type: string
        response:
          $ref: '#/components/schemas/QueuedResponseData'
      required:
        - success
        - message
        - response
      type: object
    QueuedResponseData:
      properties:
        message:
          description: Success response message
          type: string
        id:
          description: The id of the render task in UUID format
          type: string
      required:
        - message
        - id
      type: object
    RenderResponse:
      properties:
        success:
          type: boolean
        message:
          type: string
        response:
          $ref: '#/components/schemas/RenderResponseData'
      required:
        - success
        - message
        - response
      type: object
    RenderResponseData:
      properties:
        status:
          description: The status of the render task
          enum:
            - queued
            - fetching
            - rendering
            - saving
            - done
            - failed
          type: string
        id:
          description: The id of the render task in UUID format
          type: string
        owner:
          description: The owner id of the render task
          type: string
        url:
          description: >-
            The URL of the final video. This will only be available if status is
            done.
          type: string
        data:
          description: The timeline and output data to be rendered
          $ref: '#/components/schemas/Edit'
        created:
          description: The time the render task was initially queued
          type: string
        updated:
          description: The time the render status was last updated
          type: string
      required:
        - status
        - id
        - owner
        - data
        - created
        - updated
      type: object
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    DeveloperKey:
      description: >-
        Set the header named below with your provided key for the correct
        environment (v1 or stage). Include the header in all calls to the API
        that are secured with a key.
      type: apiKey
      in: header
      name: x-api-key
  links: {}
  callbacks: {}

