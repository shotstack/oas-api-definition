    HtmlAsset:
      description: >-
        The HtmlAsset clip type lets you create text based layout and formatting using
        HTML and CSS. You can also set the height and width of a bounding box for the HTML
        content to sit within. Text and elements will wrap within the bounding box.
      type: object
      properties:
        type:
          default: html
          description: The type of asset - set to `html` for HTML.
          type: string
        html:
          description: >-
            The HTML text string. See list of
            [supported HTML tags](https://shotstack.io/docs/guide/architecting-an-application/html-support#supported-html-tags).
          type: string
          example: "<p>Hello <b>World</b></p>"
        css:
          description: >-
            The CSS text string to apply styling to the HTML. See list of 
            [support CSS properties](https://shotstack.io/docs/guide/architecting-an-application/html-support#supported-css-properties).
          type: string
          example: "p { color: #ffffff; } b { color: #ffff00; }"
        width:
          description: >-
            Set the width of the HTML asset bounding box in pixels. Text will wrap to fill the bounding box.
          type: integer
          example: 400
        height:
          description: >-
            Set the width of the HTML asset bounding box in pixels. Text and elements will be masked if they exceed the 
            height of the bounding box.
          type: integer
          example: 200
        background:
          description: >-
            Apply a background color behind the HTML bounding box using. Set the text color using hexadecimal 
            color notation. Transparency is supported by setting the first two characters of the hex string 
            (opposite to HTML), i.e. #80ffffff will be white with 50% transparency.
          type: string
        position:
          description: >-
            Place the HTML in one of nine predefined positions within the HTML area.
            <ul>
              <li>`top` - top (center)</li>
              <li>`topRight` - top right</li>
              <li>`right` - right (center)</li>
              <li>`bottomRight` - bottom right</li>
              <li>`bottom` - bottom (center)</li>
              <li>`bottomLeft` - bottom left</li>
              <li>`left` - left (center)</li>
              <li>`topLeft` - top left</li>
              <li>`center` - center</li>
            </ul>
          enum:
            - top
            - topRight
            - right
            - bottomRight
            - bottom
            - bottomLeft
            - left
            - topLeft
            - center
          type: string
      required:
        - type
        - html
