    Clip:
      description: >-
        A clip is a container for a specific type of asset, i.e. a title, image, video,
        audio or html. You use a Clip to define when an asset will display on the
        timeline, how long it will play for and transitions, filters and effects to apply
        to it.
      properties:
        asset:
          $ref: "./asset.yaml#/Asset"
        start:
          description: The start position of the Clip on the timeline.
          oneOf:
            - type: number
              description: >-
                The start position of the Clip on the timeline, in seconds.
                For example, to start the Clip at 2 seconds, set the start value to 2.
              example: 2
            - type: string
              description: >-
                The start position using a [smart clip property](/docs/guide/architecting-an-application/smart-clips/).
                Set to `auto` to automatically play the clip after the previous clip finishes.
              enum:
                - auto
        length:
          description: The duration the Clip should play for.
          oneOf:
            - type: number
              description: >-
                The duration the Clip should play for, in seconds.
                For example, to play the Clip for 5 seconds, set the length value to 5.
              example: 5
            - type: string
              description: >-
                The duration the Clip should play for using a
                [smart clip property](/docs/guide/architecting-an-application/smart-clips/).
                Set to `auto` to play the Clip for the duration of the asset. Set to `end` to display or play the clip to
                the end of the timeline.
              enum:
                - auto
                - end
        fit:
          description: >-
            Set how the asset should be scaled to fit the viewport using one of the following options: 
              <ul>
                <li>`crop` <b>(default)</b> - scale the asset to fill the viewport while maintaining the aspect ratio. The asset will be cropped if it exceeds the bounds of the viewport.</li>
                <li>`cover` - stretch the asset to fill the viewport without maintaining the aspect ratio.</li>
                <li>`contain` - fit the entire asset within the viewport while maintaining the original aspect ratio.</li>
                <li>`none` - preserves the original asset dimensions and does not apply any scaling.</li>
              </ul>
          enum:
            - cover
            - contain
            - crop
            - none
          type: string
        scale:
          description: >-
            Scale the asset to a fraction of the viewport size - i.e. setting the scale to 0.5 will scale
            asset to half the size of the viewport. This is useful for picture-in-picture video and 
            scaling images such as logos and watermarks.
          type: number
          example: 0
        position:
          description: >-
            Place the asset in one of nine predefined positions of the viewport. This is most effective
            for when the asset is scaled and you want to position the element to a specific position.
            <ul>
              <li>`top` - top (center)</li>
              <li>`topRight` - top right</li>
              <li>`right` - right (center)</li>
              <li>`bottomRight` - bottom right</li>
              <li>`bottom` - bottom (center)</li>
              <li>`bottomLeft` - bottom left</li>
              <li>`left` - left (center)</li>
              <li>`topLeft` - top left</li>
              <li>`center` - center</li>
            </ul>
          enum:
            - top
            - topRight
            - right
            - bottomRight
            - bottom
            - bottomLeft
            - left
            - topLeft
            - center
          type: string
        offset:
          description: >-
            Offset the location of the asset relative to its position on the
            viewport. The offset distance is relative to the width of the viewport -
            for example an x offset of 0.5 will move the asset half the viewport width
            to the right.
          $ref: "./offset.yaml#/Offset"
        transition:
          $ref: "./transition.yaml#/Transition"
        effect:
          description: >-
            A motion effect to apply to the Clip.
            <ul>
              <li>`zoomIn` - slow zoom in</li>
              <li>`zoomOut` - slow zoom out</li>
              <li>`slideLeft` - slow slide (pan) left</li>
              <li>`slideRight` - slow slide (pan) right</li>
              <li>`slideUp` - slow slide (pan) up</li>
              <li>`slideDown` - slow slide (pan) down</li>
            </ul>
            The motion effect speed can also be controlled by appending `Fast` or `Slow`
            to the effect, e.g. `zoomInFast` or `slideRightSlow`.
          enum:
            - zoomIn
            - zoomInSlow
            - zoomInFast
            - zoomOut
            - zoomOutSlow
            - zoomOutFast
            - slideLeft
            - slideLeftSlow
            - slideLeftFast
            - slideRight
            - slideRightSlow
            - slideRightFast
            - slideUp
            - slideUpSlow
            - slideUpFast
            - slideDown
            - slideDownSlow
            - slideDownFast
          type: string
        filter:
          description: >-
            A filter effect to apply to the Clip.
            <ul>
              <li>`blur` - blur the scene</li>
              <li>`boost` - boost contrast and saturation</li>
              <li>`contrast` - increase contrast</li>
              <li>`darken` - darken the scene</li>
              <li>`greyscale` - remove colour</li>
              <li>`lighten` - lighten the scene</li>
              <li>`muted` - reduce saturation and contrast</li>
              <li>`negative` - negative colors</li>
            </ul>
          enum:
            - blur
            - boost
            - contrast
            - darken
            - greyscale
            - lighten
            - muted
            - negative
          type: string
          example: greyscale
        opacity:
          description: >-
            Offset an asset on the horizontal axis (left or right). Use a number or an array of
            [Tween](./#tocs_tween) objects to create a custom animation.
          oneOf:
            - type: number
              description: >-
                Sets the opacity of the Clip where 1 is opaque and 0 is transparent.
              example: 0.5
            - type: array
              description: >-
                An array of [Tween](./#tocs_tween) objects used to create a custom animation. Animate the opacity
                of an asset over time.
              items:
                $ref: "./tween.yaml#/Tween"
        transform:
          description: >-
            A transformation lets you modify the visual properties of a clip. Available
            transformations are <b>rotate</b>, <b>skew</b> and <b>flip</b>. Transformations
            can be combined to create interesting new shapes and effects.
          $ref: "./transformation.yaml#/Transformation"
      required:
        - asset
        - start
        - length
      type: object
